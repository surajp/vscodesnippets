{
/*
	// Place your snippets for Apex here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/	
	"Copyright Comment": {
		"prefix": "s-copyright",
		"body": [
			"/************************************************************",
			"",
			"*** Copyright (c) Vertex Computer Systems Inc. All rights reserved.",
			"",
			"*** @author: Suraj Pillai",
			"*** @group: $1",
			"*** @date: ${CURRENT_MONTH}/${CURRENT_YEAR}",
			"*** @description: $2",
			"",
			"*/"
		],
		"description": "Insert initial comments"
	},

	"Function Comment": {
		"prefix": "s-fcomm",
		"body": [
			"/************************************************************",
			"",
			"*** @description $1",
			"*** @param $2",
			"*** @return $3",
			"",
			"*/"
		],
		"description": "Insert initial comments"
	},

	"debug": {
		"prefix": "s-debug",
		"body": [
			"system.debug('$1');",
			"$2"
		],
		"description": "Write statements to the debug log"
	},
	"assert Equals": {
		"prefix": "s-equals",
		"body": [
			"system.assertEquals(${1:expected},${2:actual});",
			"$3"
		],
		"description": "Assert that 2 values are equal in an Apex Test Class"
	},
	"assert Not Equals": {
		"prefix": "s-nequals",
		"body": [
			"system.assertNotEquals(${1:expected},${2:actual});",
			"$3"
		],
		"description": "Assert that 2 values are not equal in an Apex Test Class"
	},

	"batch Job": {
			"prefix": "s-batch",
			"body": [
				"global class ${1:className} implements Database.Batchable<SObject>{",
				"",
				"\tglobal Database.Querylocator start(Database.BatchableContext bc){",
				"\t\treturn Database.getQuerylocator($2);",
				"\t}",
				"",
				"\tglobal void execute(Database.BatchableContext bc,list<SObject> records){",
				"\t\t$3",
				"\t}",
				"",
				"\tglobal void finish(Database.BatchableContext bc){",
				"\t\t$4",
				"\t}",
				"",
				"}"
			],
			"description": "Apex Batch Job"
		},

		"send email": {
			"prefix": "s-email",
			"body": [
				"GlobalUtils.SendEmailPostCompletion(bc, 'admin@bSync.com', '$1', '$2');",
			],
			"description": "Send Email afer Batch job is completed"
		}
}